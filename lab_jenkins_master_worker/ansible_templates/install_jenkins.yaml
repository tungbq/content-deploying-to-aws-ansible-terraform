---
- hosts: "{{ passed_in_hosts }}"
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: yum update
      yum:
        name: '*'
        state: latest

    - name: install dependencies
      yum:
        name: "{{ package }} "
        state: present
      vars:
        package:
        - wget
        - git

    - name: clone repo
      git:
        repo: https://github.com/linuxacademy/content-terraform-jenkins.git
        dest: /tmp/jenkins

    - name: Download Long Term Jenkins release
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import jenkins key from url
      ansible.builtin.rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

    - name: Install java
      yum:
        name: java-11-openjdk-devel
        state: present

    - name: Install jenkins
      yum:
        name: jenkins
      state: latest

    - name: Temporarily Stop Jenkins
      service: 
        name: jenkins 
        state: stopped
   
    - name: Delete Jenkins default dir
      file:
        state: absent
        path: /var/lib/jenkins
    
    - name: Copy over cloned Jenkins /var/lib/jenkins
      copy:
        remote_src: yes
        src: /tmp/jenkins/jenkins
        dest: /var/lib
        
         
    - name: Restore jenkins user ownership on /var/lib/jenkins
      file:
        path: /var/lib/jenkins
        state: directory
        recurse: yes
        owner: jenkins

    - name: daemon-reload to pick up config changes
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start jenkins
      ansible.builtin.systemd:
        name: jenkins
        state: started

    - name: Wait until Jenkins is up
      shell: result_first=1; while [[ $result_first != 0 ]]; do if [[ `grep 'Jenkins is fully up and running' /var/log/jenkins/jenkins.log` ]];then result_first=0;else sleep 4;fi;done
      register: result
      until: result.rc == 0
